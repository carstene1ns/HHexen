dnl Process this file with autoconf to produce a configure script.
dnl configure.in for HHexen v1.4
AC_REVISION([configure.in 1.00])
AC_INIT(base/a_action.c)		
AC_CONFIG_HEADER(include/config.h)

dnl ==================================================================
dnl Default values
dnl ==================================================================

GLHEXEN="false"
GLLIBS=""
BASELIBS=""
LIBS="-L/usr/X11R6/lib"
HAVEGL="no"
HAVEGLU="no"
BUILDNAMES=""


dnl ==================================================================
dnl Checks for programs.
dnl ==================================================================

AC_PROG_CC
AC_PROG_CPP

dnl ==================================================================
dnl Checks for header files.
dnl ==================================================================

AC_CHECK_HEADERS(\
	dlfcn.h \
	linux/cdrom.h \
	sys/cdio.h \
	sys/soundcard.h \
	linux/soundcard.h \
	machine/soundcard.h \
	soundcard.h \
	stdint.h \
	inttypes.h \
	strings.h
)
AC_HEADER_STAT()

dnl ==================================================================
dnl Checks for typedefs, structures, and compiler characteristics
dnl ==================================================================

AC_C_CONST()
AC_C_INLINE()
AC_C_CHAR_UNSIGNED()
AC_TYPE_SIZE_T()
AC_CHECK_SIZEOF(char,0)
AC_CHECK_SIZEOF(short,0)
AC_CHECK_SIZEOF(int,0)
AC_CHECK_SIZEOF(long,0)
AC_CHECK_SIZEOF(long long,0)
AC_CHECK_SIZEOF(size_t,0)

AC_C_BIGENDIAN

dnl === Check for underscore on external symbols =====================
AC_CACHE_CHECK("whether external symbols need an underscore prefix",
               ac_cv_c_extern_prefix,
[saved_libs=$LIBS
LIBS="conftest_asm.s $LIBS"
cat > conftest_asm.s <<EOF
	.globl _ac_test
_ac_test:
	.long 0
EOF
AC_TRY_LINK([extern int ac_test;],[if (ac_test) return 1],
            ac_cv_c_extern_prefix="yes",ac_cv_c_extern_prefix="no")
LIBS=$saved_libs])

dnl === Check for gcc strength-reduce bug ============================
if test "x${GCC}" = "xyes"
then
  CFLAGS="$CFLAGS -Wall"
  AC_CACHE_CHECK( "for gcc strength-reduce bug", ac_cv_c_gcc_strength_bug,
                  AC_TRY_RUN([
int main(void) {
  static int Array[[3]];
  unsigned int B = 3;
  int i;
  for(i=0; i<B; i++) Array[[i]] = i - 3;
  exit( Array[[1]] != -2 );
}],
    ac_cv_c_gcc_strength_bug="no",
    ac_cv_c_gcc_strength_bug="yes",
    ac_cv_c_gcc_strength_bug="yes") )
  if test "$ac_cv_c_gcc_strength_bug" = "yes"
  then
    CFLAGS="$CFLAGS -fno-strength-reduce"
  fi
fi


dnl ================================================================== 
dnl Command-line arguments
dnl ================================================================== 

AC_ARG_ENABLE(gl,
AC_HELP_STRING([--enable-gl], [Enable OpenGL mode ]),
					[], [enable_gl=no])
if test x$enable_gl = xyes; then
	AC_DEFINE(RENDER3D)
	GLHEXEN="true"
	SDL_VERSION="1.1.2"
else
	SDL_VERSION="1.1.0"
fi

AC_ARG_ENABLE(demowad,
AC_HELP_STRING([--enable-demowad], [Compile for the demo version wadfile only [[default=no]]]),
									[], [enable_demowad=no])
if test x$enable_demowad = xyes; then
	AC_DEFINE(DEMO_VERSION)
fi

AC_ARG_ENABLE(oldwad,
AC_HELP_STRING([--enable-oldwad],  [Compile for the version 1.0 wadfiles only [[default=no]]]),
									[], [enable_oldwad=no])
if test x$enable_oldwad = xyes; then
	AC_DEFINE(VERSION10_WAD)
fi

AC_ARG_ENABLE(assassin,
AC_HELP_STRING([--enable-assassin], [Compile with support for the Assassin [[default=no]]]),
									[], [enable_assassin=no])
if test x$enable_assassin = xyes; then
	AC_DEFINE(ASSASSIN)
fi

AC_SUBST(GLHEXEN)


dnl ================================================================== 
dnl Checks for library functions. 
dnl ==================================================================

AC_CHECK_LIB(pthread, pthread_join, [BASELIBS="-lpthread"])

AC_SUBST(BASELIBS)

AC_CHECK_LIB(dl, dlopen)
AC_CHECK_LIB(m, pow)
AC_CHECK_LIB(m, sqrt)

dnl === Check for SDL ================================================
AM_PATH_SDL($SDL_VERSION,
	[HAVESDL="yes";GLLIBS=""],
	[HAVESDL="no"]
)
if test "$HAVESDL" = "no"; then
	AC_MSG_ERROR([*** SDL version $SDL_VERSION not found!])
fi

AC_SUBST(GLLIBS)
AC_SUBST(HAVESDL)

dnl === Check for GL libraries =======================================
if test "$GLHEXEN" = "true"; then
  AC_CHECK_LIB(GL, glBindTexture, [LIBS="$LIBS -lGL";HAVEGL="yes";], [HAVEGL="no";])
  if test "$HAVEGL" = "no"; then
	AC_MSG_ERROR([*** GL library not found!])
  fi
  AC_CHECK_LIB(GLU, gluOrtho2D, [LIBS="$LIBS -lGLU";HAVEGLU="yes";], [HAVEGLU="no";])
  if test "$HAVEGLU" = "no"; then
	AC_MSG_ERROR([*** GLU library not found!])
  fi
fi


dnl ================================================================== 
dnl Miscellaneous things
dnl ================================================================== 

dnl === do not compile most parameter validation debugging code ======
AC_DEFINE(NORANGECHECKING)

dnl === don't like this one!. needed for pthread support in OSS sound.
AC_DEFINE(_REENTRANT)


dnl ================================================================== 
dnl Generate output files
dnl ================================================================== 

if test "$HAVEGL" = "yes"; then
    BUILDNAMES="OpenGL (SDL)"
else
    BUILDNAMES="Software (SDL)"
fi

MAKE_NAME=Makefile
AC_SUBST_FILE(MAKE_RULES)

AC_OUTPUT(Makefile)

echo
echo "HHexen configuration finished."
echo "Enabled targets: $BUILDNAMES"
echo

echo "Type 'make' to compile."
echo

